{"version":3,"file":"ballpen.min.js","sources":["../src/ballpen.js"],"sourcesContent":["class Ballpen {\r\n\r\n    constructor(el, dataModel) {\r\n        this.el = document.querySelector(el);\r\n        this.dataModel = dataModel;\r\n        // Init EventList\r\n        this.initOptions(dataModel);\r\n        // Scan lables\r\n        this.scan(this.el);\r\n    };\r\n\r\n    initOptions(dataModel) {\r\n        if (dataModel.event) {\r\n            this.eventList = {};\r\n            this.initEventList(dataModel.event);\r\n        }\r\n\r\n        if (dataModel.data) {\r\n            this.dataList = dataModel.data;\r\n            this.modelList = {};\r\n        }\r\n\r\n        // Others\r\n        this.registers = [];\r\n    };\r\n\r\n    initEventList(eventList) {\r\n        if (eventList) {\r\n            let _thisEventObject = eventList;\r\n            for (let item in _thisEventObject) {\r\n                this.eventList[item]      = {};\r\n                this.eventList[item].type = '';\r\n                this.eventList[item].fn   = _thisEventObject[item];\r\n            }\r\n        }\r\n    };\r\n\r\n    scan(el) {\r\n        for (let i = 0; i < el.children.length; i++) {\r\n            let _thisNode = el.children[i];\r\n\r\n            // Bind\r\n            this.bind(_thisNode);\r\n\r\n            // Recursion\r\n            if (_thisNode.children.length > 0) {\r\n                this.scan(_thisNode);\r\n            }\r\n        }\r\n\r\n        this.attach();\r\n    };\r\n\r\n    bind(el) {\r\n        if (!el.hasAttributes()) {\r\n            return;\r\n        }\r\n\r\n        let _attrs = el.attributes;\r\n\r\n        for (let i = 0; i < _attrs.length; i++) {\r\n            const _attr = _attrs.item(i);\r\n\r\n            if (_attr.name === 'bp-model') {\r\n                this.bindModel(el);\r\n            }\r\n\r\n            if (_attr.name === 'bp-class') {\r\n                this.bindClass(el);\r\n            }\r\n\r\n            if (/bp-event:/ig.test(_attr.name)) {\r\n                let _fnType = _attr.name.split(':')[1];\r\n                let _fnName = _attr.value;\r\n                this.bindEvent(el, _fnName, _fnType);\r\n            }\r\n\r\n            if (_attr.name === 'bp-for') {\r\n                this.bindFor(el);\r\n            }\r\n        }\r\n    };\r\n\r\n    static isArray(arr) {\r\n        return Array.isArray(arr) || Object.prototype.toString.call(arr) === '[object Array]';\r\n    }\r\n\r\n    static isObject(obj) {\r\n        return Object.prototype.toString.call(obj) === '[object Object]';\r\n    }\r\n\r\n    static parseData(str, dataObj) {\r\n        const _list = str.split('.');\r\n        let _data;\r\n        let p = [];\r\n\r\n        _list.forEach((key, index) => {\r\n            if (index === 0) {\r\n                _data = dataObj[key];\r\n                p.push(key);\r\n            } else {\r\n                _data = _data[key];\r\n                p.push(key);\r\n            }\r\n        });\r\n\r\n        return {\r\n            path: p,\r\n            data: _data\r\n        };\r\n    };\r\n\r\n    bindModel(el) {\r\n        const modelName = el.getAttribute('bp-model');\r\n        const model = Ballpen.parseData(modelName, this.dataList);\r\n\r\n        (el.tagName === 'INPUT' ? el.value = model.data : el.innerText = model.data);\r\n\r\n        this.register(this.dataList, model.path, (yetVal, nowVal) => {\r\n            (el.tagName === 'INPUT' ? el.value = nowVal : el.innerText = nowVal);\r\n        });\r\n    };\r\n\r\n    bindClass(el) {\r\n        const modelName = el.getAttribute('bp-class');\r\n        const model = Ballpen.parseData(modelName, this.dataList);\r\n\r\n        if (!el.classList.contains(model.data)) {\r\n            el.classList.add(model.data);\r\n        }\r\n\r\n        this.register(this.dataList, model.path, (yetVal, nowVal) => {\r\n            if (!el.classList.contains(nowVal)) {\r\n                el.classList.add(nowVal);\r\n            }\r\n        });\r\n    };\r\n\r\n    bindEvent(el, _fnName, _fnType) {\r\n        // Update global event list\r\n        this.eventList[_fnName]['type'] = _fnType;\r\n        \r\n        // Bind listener, set callback fn to global data context\r\n        el.addEventListener(_fnType, this.eventList[_fnName]['fn'].bind(this.dataList));\r\n    };\r\n\r\n    bindFor(el) {\r\n        const modelName = el.getAttribute('bp-for');\r\n        const model = Ballpen.parseData(modelName, this.dataList);\r\n\r\n        let virtualDiv = document.createDocumentFragment();\r\n\r\n        for (let i = 0; i < model.data.length; i++) {\r\n            let div = el.cloneNode(true);\r\n\r\n            div.removeAttribute('bp-for');\r\n\r\n            if (div.getAttribute('bp-class')) {\r\n                this.bindClass(div);\r\n            }\r\n\r\n            if (div.getAttribute('bp-event')) {\r\n                this.bindEvent(div);\r\n            }\r\n\r\n            let _dataPath = `${modelName}.${i}`;\r\n\r\n            virtualDiv.appendChild(this.bindForItems(div, _dataPath));\r\n        }\r\n\r\n        el.parentNode.appendChild(virtualDiv);\r\n        el.remove();\r\n\r\n        // Set register\r\n        this.register(this.dataList, model.path, (yetVal, nowVal) => {\r\n            let virtualDiv = document.createDocumentFragment();\r\n\r\n            for (let i = 0; i < nowVal.length; i++) {\r\n                let div = el.cloneNode(true);\r\n\r\n                if (div.getAttribute('bp-class')) {\r\n                    this.bindClass(div);\r\n                }\r\n\r\n                if (div.getAttribute('bp-event')) {\r\n                    this.bindEvent(div);\r\n                }\r\n\r\n                let _dataPath = `${modelName}.${i}`;\r\n\r\n                virtualDiv.appendChild(this.bindForItems(div, _dataPath));\r\n            }\r\n            console.log(el);\r\n            el.parentNode.appendChild(virtualDiv);\r\n            el.remove();\r\n        });\r\n    };\r\n\r\n    bindForItems(el, data) {\r\n        for (let j = 0; j < el.children.length; j++) {\r\n            const _thisNode = el.children[j];\r\n\r\n            if (_thisNode.getAttribute('bp-class')) {\r\n                this.bindClass(_thisNode);\r\n            }\r\n\r\n            if (_thisNode.getAttribute('bp-event')) {\r\n                this.bindEvent(_thisNode);\r\n            }\r\n\r\n            if (_thisNode.getAttribute('bp-for-item')) {\r\n                let _thisSubModel = _thisNode.getAttribute('bp-for-item');\r\n                let _thisSubModelAbs = data + `.${_thisSubModel}`;\r\n\r\n                _thisNode.setAttribute('bp-model', _thisSubModelAbs);\r\n                _thisNode.removeAttribute('bp-for-item');\r\n            }\r\n\r\n            if (_thisNode.getAttribute('bp-model')) {\r\n                this.bindModel(_thisNode);\r\n            }\r\n\r\n            if (_thisNode.children.length > 0) {\r\n                this.bindForItems(_thisNode);\r\n            }\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    observePath(obj, paths, fns) {\r\n        if (Ballpen.isArray(paths)) {\r\n            let _path = obj;\r\n            let _key;\r\n\r\n            paths.forEach((key, index) => {\r\n                if (/^\\d+$/.test(key)) {\r\n                    key = parseInt(key);\r\n                }\r\n\r\n                if (index < paths.length - 1) {\r\n                    _path = _path[key];\r\n                } else {    \r\n                    _key = key;\r\n                }\r\n            });\r\n\r\n            this.observeKey(_path, _key, fns);\r\n        }\r\n    };\r\n\r\n    observeKey(obj, key, fns = false) {\r\n        if (Ballpen.isArray(key)) {\r\n            this.observePath(obj, key, fns);\r\n        } else {\r\n            let yetVal = obj[key];\r\n            if (Ballpen.isObject(yetVal)) {\r\n                Object.keys(yetVal).forEach((key) => {\r\n                    this.observeKey(yetVal, key, fns);\r\n                });\r\n            } else if (Ballpen.isArray(yetVal)) {\r\n                this.observeArray(yetVal, fns);\r\n            } else {\r\n                Object.defineProperty(obj, key, {\r\n                    get: () => {\r\n                        return yetVal;\r\n                    },\r\n                    set: (nowVal) => {  \r\n                        if (nowVal !== yetVal) {\r\n                            fns && fns.forEach((fn) => {\r\n                                fn.call(this, yetVal, nowVal);\r\n                            });\r\n                        }\r\n\r\n                        yetVal = nowVal;\r\n                    },\r\n                    enumerable: true,\r\n                    configurable: true\r\n                });\r\n            }\r\n        }\r\n    };\r\n    \r\n    observeArray(arr, fns = false) {\r\n        const mutatorMethods = ['copyWithin', 'fill', 'pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'];\r\n        const arrayProto = Array.prototype;\r\n\r\n        // Prevent from polluting the global 'Array.prototype'\r\n        const hijackProto = Object.create(arrayProto);\r\n\r\n        mutatorMethods.forEach((method) => {\r\n            Object.defineProperty(hijackProto, method, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                writable: true,\r\n                value: (...args) => {\r\n                    let yetVal = arr.slice();\r\n                    let nowVal = arrayProto[method].call(arr, ...args);\r\n                    // Callback\r\n                    fns && fns.forEach((fn) => {\r\n                        fn.call(this, yetVal, nowVal);\r\n                    }); \r\n\r\n                    return nowVal;\r\n                } \r\n            });\r\n        });\r\n        /* eslint-disable */\r\n        arr.__proto__ = hijackProto;\r\n        arr.__proto__.__proto__ === Array.prototype; // true\r\n    };\r\n\r\n    register(obj, key, fn) {\r\n        const register = this.registers.find((item) => {\r\n            if (Object.is(item.obj, obj) && (item.key === key || item.key.toString() === key.toString())) {\r\n                return item;\r\n            }\r\n        });\r\n\r\n        if (register) {\r\n            register.fns.push(fn);\r\n        } else {\r\n            this.registers.push({\r\n                obj: obj,\r\n                key: key,\r\n                fns: [fn]\r\n            });\r\n        }\r\n    };\r\n\r\n    attach() {\r\n        this.registers.forEach((register) => {\r\n            this.observeKey(register.obj, register.key, register.fns);\r\n        });\r\n    };\r\n}\r\n\r\nexport default Ballpen;\r\n"],"names":["Ballpen","el","dataModel","document","querySelector","initOptions","scan","this","event","eventList","initEventList","data","dataList","modelList","registers","_thisEventObject","item","type","fn","i","children","length","_thisNode","bind","attach","hasAttributes","_attrs","attributes","_attr","name","bindModel","bindClass","test","_fnType","split","_fnName","value","bindEvent","bindFor","modelName","getAttribute","model","parseData","tagName","innerText","register","path","yetVal","nowVal","classList","contains","add","addEventListener","virtualDiv","createDocumentFragment","div","cloneNode","removeAttribute","_dataPath","appendChild","bindForItems","parentNode","remove","_this","log","j","_thisSubModel","_thisSubModelAbs","setAttribute","obj","paths","fns","isArray","_path","_key","forEach","key","index","parseInt","observeKey","observePath","isObject","keys","observeArray","defineProperty","call","arr","mutatorMethods","arrayProto","Array","prototype","hijackProto","Object","create","method","args","slice","__proto__","find","is","toString","push","str","dataObj","_list","_data","p"],"mappings":"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"}