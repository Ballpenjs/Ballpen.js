{"version":3,"file":"ballpen.min.js","sources":["../src/ballpen.js"],"sourcesContent":["class Ballpen {\r\n\r\n    constructor(el, dataModel) {\r\n        this.el = document.querySelector(el);\r\n        this.dataModel = dataModel;\r\n        // Init EventList\r\n        this.initOptions(dataModel);\r\n        // Scan lables\r\n        this.scan(this.el);\r\n\r\n        this.a = {\r\n            b: 1,\r\n            c: 2,\r\n            d: 3\r\n        };\r\n\r\n        this.observer(this.a, (...args) => {\r\n            console.log(args);\r\n        });\r\n    };\r\n\r\n    initOptions(dataModel) {\r\n        if (dataModel.event) {\r\n            this.eventList = {};\r\n            this.initEventList(dataModel.event);\r\n        }\r\n\r\n        if (dataModel.data) {\r\n            this.dataList = dataModel.data;\r\n            this.modelList = {};\r\n        }\r\n    };\r\n\r\n    initEventList(eventList) {\r\n        if (eventList) {\r\n            let _thisEventObject = eventList;\r\n            for (let item in _thisEventObject) {\r\n                this.eventList[item]      = {};\r\n                this.eventList[item].type = '';\r\n                this.eventList[item].fn   = _thisEventObject[item];\r\n            }\r\n        }\r\n    };\r\n\r\n    scan(el) {\r\n        for (let i = 0; i < el.children.length; i++) {\r\n            let _thisNode = el.children[i];\r\n\r\n            // Bind\r\n            this.bind(_thisNode);\r\n\r\n            // Recursion\r\n            if (_thisNode.children.length > 0) {\r\n                this.scan(_thisNode);\r\n            }\r\n        }\r\n    };\r\n\r\n    bind(el) {\r\n        if (!el.hasAttributes()) {\r\n            return;\r\n        }\r\n\r\n        let _attrs = el.attributes;\r\n\r\n        for (let i = 0; i < _attrs.length; i++) {\r\n            const _attr = _attrs.item(i);\r\n\r\n            if (_attr.name === 'bp-model') {\r\n                this.bindModel(el);\r\n            }\r\n\r\n            if (_attr.name === 'bp-class') {\r\n                this.bindClass(el);\r\n            }\r\n\r\n            if (/bp-event:/ig.test(_attr.name)) {\r\n                let _fnType = _attr.name.split(':')[1];\r\n                let _fnName = _attr.value;\r\n                this.bindEvent(el, _fnName, _fnType);\r\n            }\r\n\r\n            if (_attr.name === 'bp-for') {\r\n                this.bindFor(el);\r\n            }\r\n        }\r\n    };\r\n\r\n    static parseData(str, dataObj) {\r\n        const _list = str.split('.');\r\n        let _data;\r\n        let p = [];\r\n\r\n        _list.forEach((key, index) => {\r\n            if (index === 0) {\r\n                _data = dataObj[key];\r\n                p.push(key);\r\n            } else {\r\n                _data = _data[key];\r\n                p.push(key);\r\n            }\r\n        });\r\n\r\n        return {\r\n            path: p,\r\n            data: _data\r\n        };\r\n    };\r\n\r\n    bindModel(el) {\r\n        const modelName = el.getAttribute('bp-model');\r\n        const model = Ballpen.parseData(modelName, this.dataList);\r\n\r\n        if (el.tagName === 'INPUT') {\r\n            el.value = model.data;\r\n        } else {\r\n            el.innerText = model.data;\r\n        }\r\n\r\n        // Add to global mapper\r\n    };\r\n\r\n    bindClass(el) {\r\n        const modelName = el.getAttribute('bp-class');\r\n        const model = Ballpen.parseData(modelName, this.dataList);\r\n\r\n        if (!el.classList.contains(model.data)) {\r\n            el.classList.add(model.data);\r\n        }\r\n    };\r\n\r\n    bindEvent(el, _fnName, _fnType) {\r\n        // Update global event list\r\n        this.eventList[_fnName]['type'] = _fnType;\r\n        \r\n        // Bind listener\r\n        el.addEventListener(_fnType, this.eventList[_fnName]['fn']);\r\n    };\r\n\r\n    bindFor(el) {\r\n        const modelName = el.getAttribute('bp-for');\r\n        const model = Ballpen.parseData(modelName, this.dataList).data;\r\n\r\n        let virtualDiv = document.createDocumentFragment();\r\n\r\n        for (let i = 0; i < model.length; i++) {\r\n            let div = el.cloneNode(true);\r\n\r\n            div.removeAttribute('bp-for');\r\n\r\n            if (div.getAttribute('bp-class')) {\r\n                this.bindClass(div);\r\n            }\r\n\r\n            if (div.getAttribute('bp-event')) {\r\n                this.bindEvent(div);\r\n            }\r\n\r\n            let _dataPath = `${modelName}.${i}`;\r\n\r\n            virtualDiv.appendChild(this.bindForItems(div, _dataPath));\r\n        }\r\n\r\n        el.parentNode.appendChild(virtualDiv);\r\n        el.remove();\r\n    };\r\n\r\n    bindForItems(el, data) {\r\n        for (let j = 0; j < el.children.length; j++) {\r\n            const _thisNode = el.children[j];\r\n\r\n            if (_thisNode.getAttribute('bp-class')) {\r\n                this.bindClass(_thisNode);\r\n            }\r\n\r\n            if (_thisNode.getAttribute('bp-event')) {\r\n                this.bindEvent(_thisNode);\r\n            }\r\n\r\n            if (_thisNode.getAttribute('bp-for-item')) {\r\n                let _thisSubModel = _thisNode.getAttribute('bp-for-item');\r\n                let _thisSubModelAbs = data + `.${_thisSubModel}`;\r\n\r\n                _thisNode.setAttribute('bp-model', _thisSubModelAbs);\r\n                _thisNode.removeAttribute('bp-for-item');\r\n            }\r\n\r\n            if (_thisNode.getAttribute('bp-model')) {\r\n                this.bindModel(_thisNode);\r\n            }\r\n\r\n            if (_thisNode.children.length > 0) {\r\n                this.bindForItems(_thisNode);\r\n            }\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    observer(d, fn) {\r\n        Object.keys(d).forEach((key) => {\r\n            this.oberveKey(d, key, fn);\r\n        });\r\n    }\r\n\r\n    oberveKey(obj, key, fn = false) {\r\n        let yetVal = obj[key];\r\n        if (Object.prototype.toString.call(yetVal) === '[object Object]') {\r\n            this.observeAllKey(obj, fn);\r\n        } else if (Object.prototype.toString.call(yetVal) === '[object Array]') {\r\n            this.observeArray(obj, fn);\r\n        } else {\r\n            Object.defineProperty(obj, key, {\r\n                get: () => {\r\n                    return yetVal;\r\n                },\r\n                set: (nowVal) => {  \r\n                    if (nowVal !== yetVal) {\r\n                        fn && fn.call(this, yetVal, nowVal);\r\n                    }\r\n\r\n                    yetVal = nowVal;\r\n                },\r\n                enumerable: true,\r\n                configurable: true\r\n            });\r\n        }\r\n    };\r\n    \r\n    observeAllKey(obj, fn) {\r\n        Object.keys(obj).forEach((key) => {\r\n            this.oberveKey(obj, key, fn);\r\n        });\r\n    };\r\n\r\n    observeArray(arr, fn) {\r\n        const mutatorMethods = ['copyWithin', 'fill', 'pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'];\r\n        const arrayProto = Array.prototype;\r\n\r\n        // Prevent from polluting the global 'Array.prototype'\r\n        const hijackProto = Object.create(arrayProto);\r\n\r\n        mutatorMethods.forEach((method) => {\r\n            Object.defineProperty(hijackProto, method, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                writable: true,\r\n                value: (...args) => {\r\n                    let yetVal = arr.slice();\r\n                    let nowVal = arrayProto[method].call(arr, ...args);\r\n                    // Callback\r\n                    fn && fn.call(this, yetVal, nowVal);\r\n                    return nowVal;\r\n                } \r\n            });\r\n        });\r\n        /* eslint-disable */\r\n        arr.__proto__ = hijackProto;\r\n        arr.__proto__.__proto__ === Array.prototype; // true\r\n\r\n        // Listen normal key-value pairs\r\n        arr.forEach((item, index) => {\r\n            this.observeArrayItem(arr, index, fn);\r\n        });\r\n    };\r\n\r\n    observeArrayItem(arr, index, fn) {\r\n        let yetVal = arr[index];\r\n        Object.defineProperty(arr, index, {\r\n            get: () => {\r\n                return yetVal;\r\n            },\r\n            set: (nowVal) => {  \r\n                if (nowVal !== yetVal) {\r\n                    fn && fn.call(this, yetVal, nowVal);\r\n                }\r\n\r\n                yetVal = nowVal;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n    }\r\n}\r\n\r\nexport default Ballpen;\r\n"],"names":["Ballpen","el","dataModel","document","querySelector","initOptions","scan","this","a","observer","args","log","event","eventList","initEventList","data","dataList","modelList","_thisEventObject","item","type","fn","i","children","length","_thisNode","bind","hasAttributes","_attrs","attributes","_attr","name","bindModel","bindClass","test","_fnType","split","_fnName","value","bindEvent","bindFor","modelName","getAttribute","model","parseData","tagName","innerText","classList","contains","add","addEventListener","virtualDiv","createDocumentFragment","div","cloneNode","removeAttribute","_dataPath","appendChild","bindForItems","parentNode","remove","j","_thisSubModel","_thisSubModelAbs","setAttribute","d","keys","forEach","key","oberveKey","obj","yetVal","Object","prototype","toString","call","observeAllKey","observeArray","defineProperty","nowVal","arr","mutatorMethods","arrayProto","Array","hijackProto","create","method","slice","__proto__","index","observeArrayItem","str","dataObj","_list","_data","p","push"],"mappings":"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"}