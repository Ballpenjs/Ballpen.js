{"version":3,"file":"ballpen.min.js","sources":["../src/ballpen.js"],"sourcesContent":["class Ballpen {\r\n\r\n    constructor(el, dataModel) {\r\n        this.el = document.querySelector(el);\r\n        this.dataModel = dataModel;\r\n        // Init EventList\r\n        this.initOptions(dataModel);\r\n        // Scan lables\r\n        this.scan(this.el);\r\n    };\r\n\r\n    initOptions(dataModel) {\r\n        if (dataModel.event) {\r\n            this.eventList = {};\r\n            this.initEventList(dataModel.event);\r\n        }\r\n\r\n        if (dataModel.data) {\r\n            this.dataList = dataModel.data;\r\n            this.modelList = {};\r\n        }\r\n    };\r\n\r\n    initEventList(eventList) {\r\n        if (eventList) {\r\n            let _thisEventObject = eventList;\r\n            for (let item in _thisEventObject) {\r\n                this.eventList[item]      = {};\r\n                this.eventList[item].type = '';\r\n                this.eventList[item].fn   = _thisEventObject[item];\r\n            }\r\n        }\r\n    };\r\n\r\n    scan(el) {\r\n        for (let i = 0; i < el.children.length; i++) {\r\n            let _thisNode = el.children[i];\r\n\r\n            // Bind\r\n            this.bind(_thisNode);\r\n\r\n            // Recursion\r\n            if (_thisNode.children.length > 0) {\r\n                this.scan(_thisNode);\r\n            }\r\n        }\r\n    };\r\n\r\n    bind(el) {\r\n        let _attrs = el.attributes;\r\n\r\n        for (let i = 0; i < _attrs.length; i++) {\r\n            const _attr = _attrs.item(i);\r\n            \r\n            if (/bp-model=.*/ig.test(_attr)) {\r\n                this.bindModel(el);\r\n            }\r\n\r\n            if (/bp-class=.*/ig.test(_attr)) {\r\n                this.bindClass(el);\r\n            }\r\n\r\n            if (/bp-event=.*/ig.test(_attr)) {\r\n                this.bindEvent(el);\r\n            }\r\n\r\n            if (/bp-for=.*/ig.test(_attr)) {\r\n                this.bindFor(el);\r\n            }\r\n        }\r\n    };\r\n\r\n    parseData(str) {\r\n        const _list = str.split('.');\r\n        let _data;\r\n        let p = [];\r\n\r\n        _list.forEach((key, index) => {\r\n            if (index === 0) {\r\n                _data = this.dataList[key];\r\n                p.push(key);\r\n            } else {\r\n                _data = _data[key];\r\n                p.push(key);\r\n            }\r\n        });\r\n\r\n        return {\r\n            path: p,\r\n            data: _data\r\n        };\r\n    };\r\n\r\n    bindModel(el) {\r\n        const modelName = el.getAttribute('bp-model');\r\n        const model = this.parseData(modelName);\r\n\r\n        if (el.tagName === 'INPUT') {\r\n            el.value = model.data;\r\n        } else {\r\n            el.innerText = model.data;\r\n        }\r\n\r\n        // Add to global mapper\r\n    };\r\n\r\n    bindClass(el) {\r\n        const modelName = el.getAttribute('bp-class');\r\n        const model = this.parseData(modelName);\r\n\r\n        if (!el.classList.contains(model.data)) {\r\n            el.classList.add(model.data);\r\n        }\r\n    };\r\n\r\n    bindEvent(el) {\r\n        let eventLabel = el.getAttribute('bp-event');\r\n        let protoArray = eventLabel.split(/@/);\r\n\r\n        let _fnName = protoArray[1];\r\n        let _fnType = protoArray[0];\r\n\r\n        // Update global event list\r\n        this.eventList[_fnName]['type'] = _fnType;\r\n        \r\n        // Bind listener\r\n        el.addEventListener(_fnType, this.eventList[_fnName]['fn']);\r\n    };\r\n\r\n    bindFor(el) {\r\n        const modelName = el.getAttribute('bp-for');\r\n        const model = this.parseData(modelName).data;\r\n\r\n        let virtualDiv = document.createDocumentFragment();\r\n\r\n        for (let i = 0; i < model.length; i++) {\r\n            let div = el.cloneNode(true);\r\n\r\n            div.removeAttribute('bp-for');\r\n\r\n            if (div.getAttribute('bp-class') !== null) {\r\n                this.bindClass(div);\r\n            }\r\n\r\n            if (div.getAttribute('bp-event') !== null) {\r\n                this.bindEvent(div);\r\n            }\r\n\r\n            let _dataPath = `${modelName}.${i}`;\r\n\r\n            virtualDiv.appendChild(this.bindForItems(div, _dataPath));\r\n        }\r\n\r\n        el.parentNode.appendChild(virtualDiv);\r\n        el.remove();\r\n    };\r\n\r\n    bindForItems(el, data) {\r\n        for (let j = 0; j < el.children.length; j++) {\r\n            const _thisNode = el.children[j];\r\n\r\n            if (_thisNode.getAttribute('bp-class') !== null) {\r\n                this.bindClass(_thisNode);\r\n            }\r\n\r\n            if (_thisNode.getAttribute('bp-event') !== null) {\r\n                this.bindEvent(_thisNode);\r\n            }\r\n\r\n            if (_thisNode.getAttribute('bp-for-item')) {\r\n                let _thisSubModel = _thisNode.getAttribute('bp-for-item');\r\n                let _thisSubModelAbs = data + `.${_thisSubModel}`;\r\n\r\n                _thisNode.setAttribute('bp-model', _thisSubModelAbs);\r\n                _thisNode.removeAttribute('bp-for-item');\r\n            }\r\n\r\n            if (_thisNode.getAttribute('bp-model') !== null) {\r\n                this.bindModel(_thisNode);\r\n            }\r\n\r\n            if (_thisNode.children.length > 0) {\r\n                this.bindForItems(_thisNode);\r\n            }\r\n        }\r\n\r\n        return el;\r\n    }\r\n}\r\n\r\nexport default Ballpen;\r\n"],"names":["Ballpen","el","dataModel","document","querySelector","initOptions","scan","this","event","eventList","initEventList","data","dataList","modelList","_thisEventObject","item","type","fn","i","children","length","_thisNode","bind","_attrs","attributes","_attr","test","bindModel","bindClass","bindEvent","bindFor","str","_list","split","_data","p","forEach","key","index","_this","push","modelName","getAttribute","model","parseData","tagName","value","innerText","classList","contains","add","eventLabel","protoArray","_fnName","_fnType","addEventListener","virtualDiv","createDocumentFragment","div","cloneNode","removeAttribute","_dataPath","appendChild","bindForItems","parentNode","remove","j","_thisSubModel","_thisSubModelAbs","setAttribute"],"mappings":"0gBAAMA,wBAEUC,EAAIC,kBACPD,GAAKE,SAASC,cAAcH,QAC5BC,UAAYA,OAEZG,YAAYH,QAEZI,KAAKC,KAAKN,kDAGPC,GACJA,EAAUM,aACLC,kBACAC,cAAcR,EAAUM,QAG7BN,EAAUS,YACLC,SAAWV,EAAUS,UACrBE,oDAICJ,MACNA,EAAW,IACPK,GAAmBL,MAClB,GAAIM,KAAQD,QACRL,UAAUM,WACVN,UAAUM,GAAMC,KAAO,QACvBP,UAAUM,GAAME,GAAOH,EAAiBC,iCAKpDd,OACI,GAAIiB,GAAI,EAAGA,EAAIjB,EAAGkB,SAASC,OAAQF,IAAK,IACrCG,GAAYpB,EAAGkB,SAASD,QAGvBI,KAAKD,GAGNA,EAAUF,SAASC,OAAS,QACvBd,KAAKe,iCAKjBpB,OAGI,GAFDsB,GAAStB,EAAGuB,WAEPN,EAAI,EAAGA,EAAIK,EAAOH,OAAQF,IAAK,IAC9BO,GAAQF,EAAOR,KAAKG,EAEtB,iBAAgBQ,KAAKD,SAChBE,UAAU1B,GAGf,gBAAgByB,KAAKD,SAChBG,UAAU3B,GAGf,gBAAgByB,KAAKD,SAChBI,UAAU5B,GAGf,cAAcyB,KAAKD,SACdK,QAAQ7B,sCAKf8B,cACAC,EAAQD,EAAIE,MAAM,KACpBC,SACAC,cAEEC,QAAQ,SAACC,EAAKC,GACF,IAAVA,KACQC,EAAK3B,SAASyB,KACpBG,KAAKH,OAECH,EAAMG,KACZG,KAAKH,YAKLF,OACAD,qCAIJjC,MACAwC,GAAYxC,EAAGyC,aAAa,YAC5BC,EAAQpC,KAAKqC,UAAUH,EAEV,WAAfxC,EAAG4C,UACAC,MAAQH,EAAMhC,OAEdoC,UAAYJ,EAAMhC,uCAMnBV,MACAwC,GAAYxC,EAAGyC,aAAa,YAC5BC,EAAQpC,KAAKqC,UAAUH,EAExBxC,GAAG+C,UAAUC,SAASN,EAAMhC,SAC1BqC,UAAUE,IAAIP,EAAMhC,wCAIrBV,MACFkD,GAAalD,EAAGyC,aAAa,YAC7BU,EAAaD,EAAWlB,MAAM,KAE9BoB,EAAUD,EAAW,GACrBE,EAAUF,EAAW,QAGpB3C,UAAU4C,GAAf,KAAkCC,IAG/BC,iBAAiBD,EAAS/C,KAAKE,UAAU4C,GAAf,oCAGzBpD,OAMC,GALCwC,GAAYxC,EAAGyC,aAAa,UAC5BC,EAAQpC,KAAKqC,UAAUH,GAAW9B,KAEpC6C,EAAarD,SAASsD,yBAEjBvC,EAAI,EAAGA,EAAIyB,EAAMvB,OAAQF,IAAK,IAC/BwC,GAAMzD,EAAG0D,WAAU,KAEnBC,gBAAgB,UAEiB,OAAjCF,EAAIhB,aAAa,kBACZd,UAAU8B,GAGkB,OAAjCA,EAAIhB,aAAa,kBACZb,UAAU6B,MAGfG,GAAepB,MAAavB,IAErB4C,YAAYvD,KAAKwD,aAAaL,EAAKG,MAG/CG,WAAWF,YAAYN,KACvBS,8CAGMhE,EAAIU,OACR,GAAIuD,GAAI,EAAGA,EAAIjE,EAAGkB,SAASC,OAAQ8C,IAAK,IACnC7C,GAAYpB,EAAGkB,SAAS+C,MAEa,OAAvC7C,EAAUqB,aAAa,kBAClBd,UAAUP,GAGwB,OAAvCA,EAAUqB,aAAa,kBAClBb,UAAUR,GAGfA,EAAUqB,aAAa,eAAgB,IACnCyB,GAAgB9C,EAAUqB,aAAa,eACvC0B,EAAmBzD,OAAWwD,KAExBE,aAAa,WAAYD,KACzBR,gBAAgB,eAGa,OAAvCvC,EAAUqB,aAAa,kBAClBf,UAAUN,GAGfA,EAAUF,SAASC,OAAS,QACvB2C,aAAa1C,SAInBpB"}